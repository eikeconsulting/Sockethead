@using Sockethead.Razor.Forms
@model SampleModel

<div class="row">
    <div class="col-md-5">
        <h4>Readonly and Disabled</h4>
        @(await Html
            .SimpleForm(Model, new FormOptions { ActionName = "Sample" })
            .HiddenFor(model => model.View)
            .EditorFor(model => model.First, isReadOnly: true)
            .EditorFor(model => model.Last)
            .EditorFor(model => model.Disabled, isDisabled: true)
            .SubmitButton("Save Changes")
            .RenderAsync())
    </div>
    <div class="col-md-7">
        <pre><code>@@(await Html
    .SimpleForm(Model, new FormOptions { ActionName = "Sample" })
    .EditorFor(model => model.First, isReadOnly: true)
    .EditorFor(model => model.Last)
    .EditorFor(model => model.Disabled, isDisabled: true)
    .SubmitButton("Save Changes")
    .RenderAsync())
</code></pre>
        <p>
            You can optionally pass <code>isReadOnly: true</code> or <code>isDisabled: true</code> to render a readonly or disabled field.
        </p>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
