@model SampleModel

<div class="row">
    <div class="col-md-5">
        @(await Html
            .SimpleForm(Model)
            .AddRowFor(model => model.RandomDate)
            .AddRowFor(model => model.RandomDateOnly)
            .RenderAsync())
    </div>
    <div class="col-md-7">
        <h4>Razor</h4>
        <pre><code>@@(await Html
    .SimpleForm(Model)
    .AddRowFor(model => model.RandomDate)
    .AddRowFor(model => model.RandomDateOnly)
    .RenderAsync())</code></pre>
        <p>
            By default, a DateTime property will be rendered as a date and time picker. If you want to render it as a
            date picker only, you can use the <code>[DataType(DataType.Date)]</code> attribute.
        </p>
        <br/>
        <h4>Model</h4>
        <pre><code>public class DateTimeModel 
{
    [Display(Name = "Random Date")]
    public DateTime RandomDate { get; set; } = GetRandomDate();

    [Display(Name = "Random Date Only")]
    [DataType(DataType.Date)]
    public DateTime RandomDateOnly { get; set; } = GetRandomDate();
}</code></pre>
        
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
