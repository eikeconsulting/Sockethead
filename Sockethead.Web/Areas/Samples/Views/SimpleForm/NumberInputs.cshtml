@using Sockethead.Razor.Forms
@model SampleModel

<div class="row">
    <div class="col-md-5">
        <h4>Number Inputs</h4>
        @(await Html
            .SimpleForm(Model, new FormOptions { ActionName = "Sample" })
            .HiddenFor(model => model.View)
            .EditorFor(model => model.RandomDouble)
            .EditorFor(model => model.RandomDecimal)
            .EditorFor(model => model.Float)
            .EditorFor(model => model.NullableDouble)
            .SubmitButton("Save Changes")
            .RenderAsync())
    </div>
    <div class="col-md-7">
        <pre><code>@@(await Html
    .SimpleForm(Model, new FormOptions { ActionName = "Sample" })
    .EditorFor(model => model.RandomDouble)
    .EditorFor(model => model.RandomDecimal)
    .EditorFor(model => model.Float)
    .EditorFor(model => model.NullableDouble)
    .SubmitButton("Save Changes")
    .RenderAsync())
</code></pre>
        <p>
            As mentioned above, you can use the ASP.NET Core attributes to control the behavior of the property.
            For example, you can use <code>[DisplayFormat(DataFormatString = "{0:0.00}", ApplyFormatInEditMode = true)]</code> to control the number of decimal places.
            You can also apply the <code>RegularExpression</code> attribute to control the format of the input.
        </p>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}