@model ExtendedUserProfile

<div class="row">
    <div class="col-md-6">
        @(await Html
            .SimpleForm(Model, opt =>
            {
                opt.HorizontalForm = true;
            })
            .AddRowsForModel()
            .AddEnumRowFor(model => model.Gender)
            .AddRadioButtonRowFor(model => model.City, ViewBag.CityList as IEnumerable<SelectListItem>)
            .AddRadioButtonRowFor(model => model.State, ViewBag.StateList as IEnumerable<SelectListItem>, opt => opt.Inline = true)
            .AddDropDownListRowFor(model => model.Country, ViewBag.CountryList as IEnumerable<SelectListItem>)
            .AddListBoxFor(model => model.Hobbies, ViewBag.HobbyList as IEnumerable<SelectListItem>)
            .AddSubmitButton("Save Changes")
            .RenderAsync())
    </div>
    <div class="col-md-6">
        <pre><code>@@(await Html
    .SimpleForm(Model, opt =>
    {
        opt.HorizontalForm = true;
    })
    .AddRowsForModel()
    .AddEnumRowFor(model => model.Gender)
    .AddRadioButtonRowFor(model => model.City, 
        ViewBag.CityList as IEnumerable&lt;SelectListItem>)
    .AddRadioButtonRowFor(model => model.State, 
        ViewBag.StateList as IEnumerable&lt;SelectListItem>, 
            opt => opt.Inline = true)
    .AddDropDownListRowFor(model => model.Country, 
        ViewBag.CountryList as IEnumerable&lt;SelectListItem>)
    .AddListBoxFor(model => model.Hobbies, 
        ViewBag.HobbyList as IEnumerable&lt;SelectListItem>)
    .AddSubmitButtonRow("Save Changes")
    .RenderAsync())</code></pre>
        <p>
            This page demonstrates a few more control types such as Radio Button, Dropdown List, and Listbox
            which cannot be automatically generated from the model.  Enum also cannot be added automatically unless
            it is registered.
        </p>
@if (ViewBag.Result != null)
{
    <br/>
    <h4>Serialized Submitted Form Data</h4>
    <pre>@ViewBag.Result</pre>
}
    </div>
</div>

<hr/>

<div class="row">
    <div class="col-md-12">
        <h4>Controller</h4>
        <pre><code>[HttpGet, RestoreModelState]
public IActionResult HorizontalForm()
{
   ExtendedUserProfile model = new();
   
   if (TempData.ContainsKey("UserProfile"))
   {
       string json = TempData["UserProfile"].ToString();
       if (json != null)
       {
           model = JsonConvert.DeserializeObject&lt;ExtendedUserProfile>(json);
           ViewBag.Result = json;
       }
       TempData.Remove("UserProfile");
   }

   ViewBag.CityList = ExtendedUserProfile.CityList;
   ViewBag.StateList = ExtendedUserProfile.StateList;
   ViewBag.CountryList = ExtendedUserProfile.CountryList;
   ViewBag.HobbyList = ExtendedUserProfile.HobbyList;
   
   return View(model);
}

[HttpPost, ValidateAntiForgeryToken, SaveModelState]
public IActionResult HorizontalForm(ExtendedUserProfile formData)
{
   TempData["UserProfile"] = JsonConvert.SerializeObject(formData, Formatting.Indented);
   
   RedirectToActionResult result = RedirectToAction(actionName: nameof(HorizontalForm));
   
   return ModelState.IsValid
       ? result.Success("Successfully submitted form data. See the bottom of the page for serialized model data.")
       : result.Error("Error in model data.");
}</code></pre>
    </div>

</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
