@{
    IEnumerable<SampleModel> Model = new[] { 0, 1, 2, 3 }
        .Select(i => new SampleModel { SampleEnum = (SampleEnum)i });
}

<div class="row">
    <div class="col-md-6">

@(await Html
    .SimpleGrid(Model)

    .AddColumn(column => column
        .DisplayAs(model => (int)model.SampleEnum)
        .Header("int"))

    .AddColumn(column => column
        .DisplayAs(model => model.SampleEnum)
        .Header("DisplayAs"))

    .AddColumn(col => col
        .For(model => model.SampleEnum)
        .Header("For"))

    .AddColumn(column => column
        .DisplayExpression(model => model.SampleEnum)
        .Header("Expression"))

    .AddColumn(column => column
        .DisplayHtmlContent(model =>
            Html.DisplayFor(query => model.SampleEnum))
        .Header("HtmlContent"))

    .RenderAsync()
)

    </div>
    <div class="col-md-6">

        <h4>Grid</h4>

<pre><code>@@(await Html
    .SimpleGrid(Model)

    .AddColumn(column => column
        .DisplayAs(model => (int)model.SampleEnum)
        .Header("int"))

    .AddColumn(column => column
        .DisplayAs(model => model.SampleEnum)
        .Header("DisplayAs"))

    .AddColumn(col => col
        .For(model => model.SampleEnum)
        .Header("For"))

    .AddColumn(column => column
        .DisplayExpression(model => model.SampleEnum)
        .Header("Expression"))

    .AddColumn(column => column
        .DisplayHtmlContent(model =>
            Html.DisplayFor(query => model.SampleEnum))
        .Header("HtmlContent"))

    .RenderAsync()
)</code></pre>

        <br />

        <h4>Enum</h4>

        <pre><code>public enum SampleEnum
{
    [Display(Name = "Zilch")]
    Zero, 
        
    One, 
        
    Two,
}</code></pre>

        <br />

        <h4>Model</h4>

        <pre><code>IEnumerable&lt;SampleModel> Model = new[] { 0, 1, 2, 3 }
    .Select(i => new SampleModel 
    { 
        SampleEnum = (SampleEnum)i 
    });</code></pre>

        <p></p>

    </div>
</div>
