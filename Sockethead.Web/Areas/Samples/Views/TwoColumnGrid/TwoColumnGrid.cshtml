@model IQueryable<Movie>
@{
    var movie = Model.First();
}

<div class="language-csharp">

    <h4>Basic Usage</h4>
    <div class="row">
        <div class="col-md-6">
            @(Html
            .TwoColumnGrid()
            .Add(movie)
            .Render())
        </div>
        <div class="col-md-6">
<pre><code>@@(Html
    .TwoColumnGrid()
    .Add(movie)
    .Render())
</code></pre>
        </div>
    </div>

    <hr />

    <h4>Row Processor</h4>
    <div class="row">
        <div class="col-md-6">
            @(Html
            .TwoColumnGrid()
            .Add(movie)
            .AddRowProcessor(kvp =>
            {
                if (kvp.Key == "Name")
                    return new KeyValuePair<string, string>();

                return new KeyValuePair<string, string>(kvp.Key, kvp.Value.ToUpper());
            })
            .Render())
        </div>
        <div class="col-md-6">
<pre><code>@@(Html
    .TwoColumnGrid()
    .Add(movie)
    .AddRowProcessor(kvp =>
    {
        if (kvp.Key == "Name")
            return new KeyValuePair<string, string>();

        return new KeyValuePair<string, string>(kvp.Key, kvp.Value.ToUpper());
    })
    .Render()))
</code></pre>
        </div>
    </div>


    <hr />


    <h4>Add Specific Rows from Model</h4>

    <div class="row">
        <div class="col-md-6">

            @(Html
            .TwoColumnGrid()
            .Add(movie, builder => builder
                .Add(model => model.Name)
                .Add(model => model.Genre)
                .Add(model => model.Director))
            .Render())

        </div>
        <div class="col-md-6">
            <pre><code>@@(Html
    .TwoColumnGrid()
    .Add(movie, builder => builder
        .Add(model => model.Name)
        .Add(model => model.Genre)
        .Add(model => model.Director))
    .Render())
</code></pre>
        </div>
    </div>

    <hr />
    <h4>Add Arbitrary Rows</h4>

    <div class="row">
        <div class="col-md-6">

            @(await Html
            .TwoColumnGrid()
            .Add("First Row", "I like this")
            .Add(movie)
            .Add("Another", "Row here")
            .Add(new Dictionary<string, object>
            {
                ["One"] = 1,
                ["Two"] = "Two",
                ["Now"] = DateTime.Now,
            })
            .RenderAsync())

        </div>
        <div class="col-md-6">
            <pre><code>@@(await Html
    .TwoColumnGrid()
    .Add("First Row", "I like this")
    .Add(movie)
    .Add("Another", "Row here")
    .Add(new Dictionary&lt;string, object&gt;
    {
        ["One"] = 1,
        ["Two"] = "Two",
        ["Now"] = DateTime.Now,
    })
    .RenderAsync())
</code></pre>
        </div>
    </div>

    <hr />
    <h4>CSS Adjustments</h4>
    <div class="row">
        <div class="col-md-6">
            @(await Html
            .TwoColumnGrid()
            .Add(movie)
            .Css(elements =>
            {
                elements.ClearAll();
                elements.Table
                    .AddClass("table")
                    .AddClass("table-sm");
                elements.Row.AddStyle("font-style:italic");
                elements.Label.AddStyle("width: 200px;");
                elements.Item.AddStyle("color:blue");
            })
            .RenderAsync())
        </div>
        <div class="col-md-6">
<pre><code>@@(await Html
    .TwoColumnGrid()
    .Add(movie)
    .Css(elements =>
    {
        elements.ClearAll();
        elements.Table
            .AddClass("table")
            .AddClass("table-sm");
        elements.Row.AddStyle("font-style:italic");
        elements.Label.AddStyle("width: 200px;");
        elements.Item.AddStyle("color:blue");
    })
    .RenderAsync())
</code></pre>
        </div>
    </div>

    <hr />
    <h4>Filter out Duplicates</h4>

    <div class="row">
        <div class="col-md-6">

            @foreach (bool b in new[] { true, false })
            {
                <div>Allow Dupes: @b</div>
                @(await Html
                .TwoColumnGrid()
                .Add("Row A", "A Stuff")
                .Add(movie)
                .Add("Row B", "B Stuff")
                .Add("Row B", "B Stuff Again")
                .Add(movie)
                .Add("Row C", "C Stuff")
                .Options(options => options.AllowDuplicates = b)
                .RenderAsync());
            }
        </div>
        <div class="col-md-6">
<pre><code>@@(await Html
    .TwoColumnGrid()
    .Add("Row A", "A Stuff")
    .Add(movie)
    .Add("Row B", "B Stuff")
    .Add("Row B", "B Stuff Again")
    .Add(movie)
    .Add("Row C", "C Stuff")
    .Options(options => options.AllowDuplicates = ...)
    .RenderAsync());
</code></pre>
        </div>

    </div>

    <hr />
    <h4>Description List Format</h4>

    <div class="row">
        <div class="col-md-6">

            @(await Html
            .TwoColumnGrid()
            .Options(options =>
            {
                options.TwoColumnGridStyle = TwoColumnGridStyle.DescriptionList;
            })
            .Add(movie)
            .RenderAsync())

        </div>
        <div class="col-md-6">
<pre><code>@@(await Html
    .TwoColumnGrid()
    .Options(options =>
    {
        options.TwoColumnGridStyle = 
            TwoColumnGridStyle.DescriptionList;
    })
    .Add(movie)
    .RenderAsync())
</code></pre>
        </div>

    </div>

    <hr />

    <h4>Embed TwoColumnGrid</h4>

    <div class="row">
        <div class="col-md-6">
            @(await Html
            .TwoColumnGrid()
            .Add(movie)
            .AddTwoColumnGrid(
                label: "Embedded TwoColumnGrid",
                gridBuilder: grid => grid.Add(movie))
            .RenderAsync())
        </div>
        <div class="col-md-6">
<pre><code>@@(await Html
    .TwoColumnGrid()
    .Add(movie)
    .AddTwoColumnGrid(
        label: "Embedded TwoColumnGrid",
        gridBuilder: grid => grid.Add(movie))
    .RenderAsync())
</code></pre>
        </div>

    </div>

    <hr />

    <h4>Embed SimpleGrid</h4>

    <div class="row">
        <div class="col-md-6">
            @(await Html
            .TwoColumnGrid()
            .Add(movie)
            .AddSimpleGrid(
                label: "Embedded SimpleGrid",
                model: Model.Take(3),
                gridBuilder: grid => grid.AddColumnsFromModel())
            .RenderAsync())
        </div>
        <div class="col-md-6">
<pre><code>@@(await Html
    .TwoColumnGrid()
    .Add(movie)
    .AddSimpleGrid(
        label: "Embedded SimpleGrid", 
        model: Model.Take(3), 
        gridBuilder: grid => grid.AddColumnsFromModel())
    .RenderAsync())
</code></pre>
        </div>

    </div>

</div>
